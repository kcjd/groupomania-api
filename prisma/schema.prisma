// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique @db.VarChar(255)
  password  String
  lastname  String
  firstname String
  position  String?
  picture   String?
  role      Role      @default(USER)
  posts     Post[]
  comments  Comment[]
  likes     Like[]
  followers Follow[]  @relation("following")
  following Follow[]  @relation("follower")
  reports   Report[]
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  content   String    @db.VarChar(255)
  media     String?
  published Boolean   @default(true)
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  comments  Comment[]
  likes     Like[]
  reports   Report[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  content   String   @db.VarChar(255)
  published Boolean  @default(true)
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    Int
}

model Like {


  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int

  @@id([userId, postId])
}

model Follow {
  follower    User @relation(fields: [followerId], references: [id], onDelete: Cascade, name: "follower")
  followerId  Int
  following   User @relation(fields: [followingId], references: [id], onDelete: Cascade, name: "following")
  followingId Int

  @@id([followerId, followingId])
}

model Report {
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int

  @@id([userId, postId])
}

enum Role {
  USER
  MODERATOR
}
